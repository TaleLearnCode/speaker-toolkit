// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;

namespace TaleLearnCode.SpeakerToolkit.Models;

/// <summary>
/// Represents an event that the speaker participates in.
/// </summary>
public partial class Engagement
{
    /// <summary>
    /// The identifier of the engagement record.
    /// </summary>
    public int EngagementId { get; set; }

    /// <summary>
    /// Identifier of the associated engagement type.
    /// </summary>
    public int EngagementTypeId { get; set; }

    /// <summary>
    /// Identifier of the associated engagement status.
    /// </summary>
    public int EngagementStatusId { get; set; }

    /// <summary>
    /// The name of the engagement.
    /// </summary>
    public string EngagementName { get; set; }

    /// <summary>
    /// The location of the event to show on the overview.
    /// </summary>
    public string OverviewLocation { get; set; }

    /// <summary>
    /// The location of the event to show on the event listing.
    /// </summary>
    public string ListingLocation { get; set; }

    /// <summary>
    /// The start date of the event.
    /// </summary>
    public DateOnly StartDate { get; set; }

    /// <summary>
    /// The end date of the event.
    /// </summary>
    public DateOnly EndDate { get; set; }

    /// <summary>
    /// The starting cost for the event.
    /// </summary>
    public string StartingCost { get; set; }

    /// <summary>
    /// The ending cost for the event.
    /// </summary>
    public string EndingCost { get; set; }

    /// <summary>
    /// The full description of the event.
    /// </summary>
    public string EngagementDescription { get; set; }

    /// <summary>
    /// The summary description of the event.
    /// </summary>
    public string EngagementSummary { get; set; }

    public string EngagementUrl { get; set; }

    public string Permalink { get; set; }

    public virtual ICollection<EngagementPresentation> EngagementPresentations { get; set; } = new List<EngagementPresentation>();

    public virtual EngagementStatus EngagementStatus { get; set; }

    public virtual ICollection<EngagementTag> EngagementTags { get; set; } = new List<EngagementTag>();

    public virtual EngagementType EngagementType { get; set; }
}